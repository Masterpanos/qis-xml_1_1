<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2007 (http://www.altova.com) by Pascal Heus (Open Data Foundation) -->
<xs:schema xmlns="qis:reusable:1_1" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="qis:reusable:1_1" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:element name="Input" type="InputType">
		<xs:annotation>
			<xs:documentation>Description of the gate/circuit input</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="InputType">
		<xs:sequence>
			<xs:element name="Name" type="xs:string"/>
			<xs:element name="Description" type="xs:string" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="qubit" type="xs:positiveInteger">
			<xs:annotation>
				<xs:documentation>The input number. Must be lessof equalt to gate size.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="Output" type="OutputType">
		<xs:annotation>
			<xs:documentation>Description of the gate/circuit output</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="OutputType">
		<xs:sequence>
			<xs:element name="Name" type="xs:string"/>
			<xs:element name="Description" type="xs:string" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="qubit" type="xs:positiveInteger">
			<xs:annotation>
				<xs:documentation>The input number. Must be lessof equalt to gate size.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="Qubit" type="QubitType"/>
	<xs:complexType name="QubitType">
		<xs:sequence>
			<xs:element name="Zero" type="ComplexNumberType"/>
			<xs:element name="One" type="ComplexNumberType"/>
		</xs:sequence>
	</xs:complexType>
	<!--Common elements-->
	<xs:element name="ProprietaryData">
		<xs:annotation>
			<xs:documentation>Generic element to hold application specific data or metadata </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="xs:anyType">
					<xs:attribute name="type" use="required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<!--Identification and Reference-->
	<xs:element name="Identification" type="IdentificationType"/>
	<xs:complexType name="IdentificationType">
		<xs:sequence>
			<xs:element name="ID" type="xs:NCName"/>
			<xs:element name="Agency" type="xs:NCName" minOccurs="0"/>
			<xs:element name="Version" type="xs:string" minOccurs="0"/>
			<xs:element name="VersionDescription" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Reference" type="ReferenceType"/>
	<xs:complexType name="ReferenceType">
		<xs:sequence>
			<xs:element name="ID" type="xs:NCName">
				<xs:annotation>
					<xs:documentation>Object identifier</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LibraryID" type="xs:NCName" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Library identifier</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AgencyID" minOccurs="0"/>
			<xs:element name="Version" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="URI" type="xs:anyURI"/>
	</xs:complexType>
	<!--Math structures-->
	<xs:complexType name="ComplexNumberType">
		<xs:sequence>
			<xs:element name="Symbolic" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Can be used to describe a symbolic expression for this value.
When the @r and @i attributes are not specified, this can be used to evaluate to an expression. 
To indicate a call to an xpath function, set the syntax attribute to 'xpath'</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="syntax">
								<xs:annotation>
									<xs:documentation>The language/syntax used for this symbolic representation (TeX, OpenOffice, XPath,  etc.)</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="r" type="xs:double">
			<xs:annotation>
				<xs:documentation>Real component.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="i" type="xs:double">
			<xs:annotation>
				<xs:documentation>Imaginary component.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="MatrixType">
		<xs:sequence>
			<xs:element name="Cell" type="MatrixCellType" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="rows" type="xs:integer"/>
		<xs:attribute name="cols" type="xs:integer"/>
	</xs:complexType>
	<xs:complexType name="MatrixCellType">
		<xs:annotation>
			<xs:documentation>A Matrix Cell is a complex number with a row and column</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ComplexNumberType">
				<xs:attribute name="row" type="xs:positiveInteger" use="required"/>
				<xs:attribute name="col" type="xs:positiveInteger" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="Transformation" type="TransformationType"/>
	<xs:complexType name="TransformationType">
		<xs:annotation>
			<xs:documentation>A unitary Transformation is a square matrix of complex numbers. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Multiplier" type="ComplexNumberType" minOccurs="0"/>
			<xs:element name="Cell" type="MatrixCellType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="size" type="xs:int" use="required"/>
	</xs:complexType>
</xs:schema>
